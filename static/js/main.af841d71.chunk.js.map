{"version":3,"sources":["serviceWorker.ts","Page.ts","components/AppContainer.tsx","components/Button.tsx","MediaService.ts","components/Select.tsx","components/Dialog.tsx","components/RecordingSettings.tsx","components/RecordingProcess.tsx","components/Finished.tsx","components/Welcome.tsx","components/Main.tsx","components/FootNote.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","Page","AppContainer","props","className","title","children","Button","onClick","icon","MediaService","withAudio","console","log","navigator","mediaDevices","getDisplayMedia","video","audio","screen","getUserMedia","enumerateDevices","audioCopy","videoAudioTrack","getAudioTracks","slice","audioCtx","AudioContext","dst","createMediaStreamDestination","audioStream","MediaStream","createMediaStreamSource","connect","mixedStream","addTrack","stream","getTracks","Select","useState","isOpen","setIsOpen","selection","setSelection","undefined","options","setOptions","map","option","key","id","value","selected","a","getOptions","open","dontSelect","onChange","Dialog","ReactDOM","createPortal","document","getElementById","RecordingSettings","videoRef","useRef","videoMediaStream","setVideoMediaStream","audioMediaDevices","setAudioMediaDevices","setMediaDevices","isVideoADisplay","setIsVideoADisplay","isChromeInfoDialogShown","setIsChromeInfoDialogShown","isChrome","chrome","webstore","runtime","onSetVideoStream","getVideoTracks","addEventListener","useEffect","current","srcObject","volume","play","height","width","src","style","filter","getScreen","then","ref","forEach","track","stop","getWebcam","device","label","d","deviceId","find","getDevices","devices","kind","onBack","startRecording","Promise","all","RecordingProcess","start","Date","blobs","recorder","hasStopped","onStop","getTime","recordingConfig","mergeTracks","MediaRecorder","t","ondataavailable","e","push","data","Finished","size","setSize","finalBlob","Blob","type","URL","createObjectURL","loop","controls","fileSize","sizeUnit","Math","round","seconds","floor","length","minutes","url","createElement","body","appendChild","display","href","download","click","revokeObjectURL","onRestart","Welcome","isOpera","opr","addons","opera","userAgent","indexOf","isFirefox","InstallTrigger","isIE","test","HTMLElement","safari","pushNotification","toString","documentMode","isEdge","StyleMedia","CSS","onChangePage","Configure","Main","step","setStep","cfg","setCfg","recording","setRecording","FootNote","pkg","version","target","rel","render","StrictMode","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.af841d71.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export enum Page {\n  Welcome,\n  Configure,\n  RecordingProcess,\n  Finished\n}","import * as React from \"react\";\n\nexport const AppContainer: React.FC<{\n  title: string;\n  className?: string;\n}> = props => {\n  return (\n    <div className={\"app-container-inner animated fadeIn faster \" + props.className}>\n      <header className=\"no-select\">\n        Vileo\n      </header>\n      <h1 className=\"no-select\">{ props.title }</h1>\n      { props.children }\n    </div>\n  )\n};\n","import * as React from \"react\";\n\nexport const Button: React.FC<{\n  icon?: string;\n  onClick?: () => any;\n}> = props => {\n\n  return (\n    <button className=\"btn no-select\" onClick={props.onClick}>\n      { props.icon && <i className=\"material-icons\">{ props.icon }</i> }\n      { props.children }\n    </button>\n  )\n};\n","export class MediaService {\n\n\n  public static async getScreen(withAudio: boolean): Promise<MediaStream> {\n    console.log(1, withAudio)\n    const screen = await (navigator.mediaDevices as any).getDisplayMedia({ video: true, audio: withAudio })\n    console.log(2)\n    return screen\n  }\n\n  public static async getWebcam(withAudio: boolean): Promise<MediaStream> {\n    return await (navigator.mediaDevices as any).getUserMedia({ video: true, audio: withAudio });\n  }\n\n  public static async getOnlyAudio() {\n    return await navigator.mediaDevices.getUserMedia({ video: false });\n  }\n\n  public static async getDevices() {\n    return await navigator.mediaDevices.enumerateDevices();\n  }\n\n  public static mergeTracks(video: MediaStream, audio: MediaStream[]): MediaStream | null {\n    let audioCopy = audio;\n    let videoAudioTrack = video.getAudioTracks()[0];\n\n    if (!videoAudioTrack && audioCopy[0]) {\n      videoAudioTrack = audioCopy[0].getAudioTracks()[0];\n      audioCopy = audioCopy.slice(1);\n    }\n\n    if (!videoAudioTrack) {\n      return null;\n    }\n\n    const audioCtx = new AudioContext();\n    const dst = audioCtx.createMediaStreamDestination();\n    const audioStream = new MediaStream([videoAudioTrack]);\n    audioCtx.createMediaStreamSource(audioStream).connect(dst);\n    for (const audioStream of audioCopy) {\n      audioCtx.createMediaStreamSource(audioStream).connect(dst);\n    }\n\n    const mixedStream = new MediaStream();\n    mixedStream.addTrack(dst.stream.getTracks()[0]);\n    return mixedStream;\n  }\n}","import * as React from \"react\";\nimport {useEffect, useState} from \"react\";\n\nexport const Select: React.FC<{\n  options?: Array<{ id: string, value: string, icon?: string }>;\n  onChange?: (selection?: string) => any;\n  title: string;\n  dontSelect?: boolean;\n  getOptions?: () => any;\n}> = props => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selection, setSelection] = useState<false | string>(false);\n  const [options, setOptions] = useState<Array<{ id: string, value: string, icon?: string }> | undefined>(undefined);\n\n  return (\n    <div\n      className={ \"select-container no-select \" + (isOpen && 'open') }\n    >\n      <select>\n        {\n          options?.map(option => (\n            <option key={option.id} value={option.value} selected={selection === option.id}>{ option.value }</option>\n          ))\n        }\n      </select>\n\n      <div\n        className=\"label-container\"\n        onClick={async () => {\n          setOptions(await props.getOptions?.() || props.options);\n          setIsOpen(open => !open)\n        }}\n      >\n        { props.title }\n        <i className=\"material-icons arrow\">keyboard_arrow_down</i>\n      </div>\n      <div className=\"options-container\">\n        <ul>\n          {\n            options?.map(option => (\n              <li key={option.id} onClick={() => {\n                if (!props.dontSelect) {\n                  setSelection(option.id)\n                }\n                props.onChange?.(option.id);\n                setIsOpen(false);\n              }}>\n                { option.icon && <i className=\"material-icons\">{ option.icon }</i> }\n                { option.value }\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  )\n};\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport const Dialog: React.FC<{\n  title: string | React.ReactNode;\n}> = props => {\n\n  return ReactDOM.createPortal((\n    <div className=\"dialog animated fadeIn\">\n      <div className=\"app-container-inner\">\n        <h1 className=\"no-select\">{ props.title }</h1>\n        { props.children }\n      </div>\n    </div>\n  ), document.getElementById('portal')!)\n};\n","import * as React from \"react\";\nimport {AppContainer} from \"./AppContainer\";\nimport {Button} from \"./Button\";\nimport {MediaService} from \"../MediaService\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {RecordingConfiguration} from \"../RecordingConfiguration\";\nimport {Select} from \"./Select\";\nimport {Dialog} from \"./Dialog\";\n\nexport const RecordingSettings: React.FC<{\n  startRecording?: (config: RecordingConfiguration) => any;\n  onBack?: () => any;\n}> = props => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [videoMediaStream, setVideoMediaStream] = useState<MediaStream | undefined>(undefined);\n  const [audioMediaDevices, setAudioMediaDevices] = useState<MediaDeviceInfo[]>([]);\n  const [mediaDevices, setMediaDevices] = useState<MediaDeviceInfo[]>([]);\n  const [isVideoADisplay, setIsVideoADisplay] = useState(false);\n  const [isChromeInfoDialogShown, setIsChromeInfoDialogShown] = useState(false);\n\n  // @ts-ignore\n  const isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\n\n  const onUnsetVideoStream = () => {\n    videoMediaStream?.getTracks().forEach(track => track.stop());\n    setVideoMediaStream(undefined);\n  };\n\n  const onSetVideoStream = (stream: MediaStream) => {\n    setVideoMediaStream(stream);\n    stream.getVideoTracks()[0].addEventListener(\"ended\", () => setVideoMediaStream(undefined));\n  };\n\n  useEffect(() => {\n    if (videoMediaStream && videoRef.current) {\n      videoRef.current.srcObject = videoMediaStream;\n      videoRef.current.volume = 0;\n      videoRef.current.play();\n    }\n  }, [videoMediaStream]);\n\n  return (\n    <AppContainer title=\"Configure Recording\">\n      {\n        isChromeInfoDialogShown && (\n          <Dialog\n            title={(\n              <>\n                <img height=\"32\" width=\"32\" src=\"https://unpkg.com/simple-icons@v2/icons/googlechrome.svg\" style={{ filter: 'invert(1)' }} />\n                &nbsp;\n                Screen Sharing under Chrome\n              </>\n            )}\n          >\n            <p>\n              You will now be asked to share a screen for recording. You can select <b>\"Share Audio\"</b> to\n              additionally record audio from the recorded display. This allows you to record applications\n              that play audio such as videos or conferences.\n            </p>\n            <div className=\"bottom-actions\">\n              <Button icon=\"arrow_back\" onClick={() => {\n                setIsChromeInfoDialogShown(false);\n              }}>\n                Go back\n              </Button>\n              <Button icon=\"arrow_forward\" onClick={() => {\n                setIsChromeInfoDialogShown(false);\n                MediaService.getScreen(true).then(onSetVideoStream);\n                setIsVideoADisplay(true);\n              }}>\n                Okay, Start Recording\n              </Button>\n            </div>\n          </Dialog>\n        )\n      }\n\n      {\n        videoMediaStream && (\n          <div className=\"video-preview animated zoomIn\">\n            <p>Recording not<br />yet started</p>\n            <video ref={videoRef} />\n          </div>\n        )\n      }\n\n      {\n        videoMediaStream ? (\n          <div className=\"card animated zoomIn faster\">\n            { isVideoADisplay && <h2 className=\"no-select\"><i className=\"material-icons\">tv</i>Video Device</h2> }\n            { !isVideoADisplay && <h2 className=\"no-select\"><i className=\"material-icons\">videocam</i>Video Device</h2> }\n            <p>{ isVideoADisplay ? 'Display device setup for recording' : 'Webcam setup for recording' }</p>\n            <div className=\"actions\">\n              <Button icon=\"delete\" onClick={() => onUnsetVideoStream()}>Remove</Button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"card\">\n            <h2 className=\"no-select\"><i className=\"material-icons\">movie</i>No Video Device selected</h2>\n            <p>You need to specify a video device.</p>\n            <div className=\"actions\">\n              <Button icon=\"tv\" onClick={() => {\n                if (isChrome) {\n                  setIsChromeInfoDialogShown(true);\n                } else {\n                  MediaService.getScreen(true).then(onSetVideoStream);\n                  setIsVideoADisplay(true);\n                }\n              }}>\n                Display\n              </Button>\n\n              <Button icon=\"videocam\" onClick={() => {\n                MediaService.getWebcam(true).then(onSetVideoStream);\n                setIsVideoADisplay(false);\n              }}>\n                Webcam\n              </Button>\n            </div>\n          </div>\n        )\n      }\n\n      {\n        audioMediaDevices.map(device => (\n          <div className=\"card animated zoomIn fast\">\n            <h2 className=\"no-select\"><i className=\"material-icons\">mic</i>Audio Device</h2>\n            <p>{ device.label }</p>\n            <div className=\"actions\">\n              <Button icon=\"delete\" onClick={() => setAudioMediaDevices(audioMediaDevices.filter(d => d.deviceId !== device.deviceId))}>Remove</Button>\n            </div>\n          </div>\n        ))\n      }\n\n      <Select\n        onChange={selection => selection && setAudioMediaDevices([...audioMediaDevices, mediaDevices.find(device => device.deviceId === selection)!])}\n        title={'Add audio source'}\n        dontSelect={true}\n        getOptions={async () => {\n          await navigator.mediaDevices.getUserMedia({ audio: true });\n          const devices = await MediaService.getDevices();\n          setMediaDevices(devices);\n          return devices\n            .filter(device => device.kind === 'audioinput')\n            .map(device => ({ id: device.deviceId, value: device.label, icon: 'mic' }));\n        }}\n      />\n\n      <div className=\"bottom-actions\">\n        <Button icon=\"arrow_back\" onClick={props.onBack}>\n          Back\n        </Button>\n\n        {\n          videoMediaStream && (\n            <Button icon=\"fiber_manual_record\" onClick={async () => {\n              props.startRecording?.({\n                video: videoMediaStream,\n                audio: await Promise.all(audioMediaDevices.map(device => {\n                  return navigator.mediaDevices.getUserMedia({ audio: { deviceId: device.deviceId } })\n                }))\n              });\n            }}>\n              Start Recording\n            </Button>\n          )\n        }\n      </div>\n    </AppContainer>\n  )\n};\n","import * as React from \"react\";\nimport {AppContainer} from \"./AppContainer\";\nimport {Button} from \"./Button\";\nimport {MediaService} from \"../MediaService\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {RecordingConfiguration} from \"../RecordingConfiguration\";\n\n/*\n\n// get tabStream from chrome.tabCapture.capture\n// get micStream from navigator.mediaDevices.getUserMedia\nlet tabAudioTrack = tabStream.getAudioTracks()[0];\nlet audioCtx = new AudioContext();\nlet dst = audioCtx.createMediaStreamDestination();\nlet tabAudioStream = new MediaStream([tabAudioTrack]);\naudioCtx.createMediaStreamSource(tabAudioStream).connect(dst);\naudioCtx.createMediaStreamSource(micStream).connect(dst);\n\nlet mixedStream = new MediaStream();\nmixedStream.addTrack(dst.stream.getTracks()[0]);\n */\nexport const RecordingProcess: React.FC<{\n  recordingConfig: RecordingConfiguration;\n  onStop?: (data: Blob[], length: number) => any;\n}> = props => {\n  const start = useRef(new Date());\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const blobs = useRef<Blob[]>([]);\n  const recorder = useRef<MediaRecorder>();\n  const hasStopped = useRef(false);\n\n  const onStop = async () => {\n    console.log(\"Stop\")\n    if (recorder.current && !hasStopped.current) {\n      hasStopped.current = true;\n      await recorder.current.stop();\n      props.onStop?.(\n        blobs.current,\n        (new Date()).getTime() - start.current.getTime()\n      );\n      props.recordingConfig.video?.getTracks().forEach(track => track.stop());\n      props.recordingConfig.audio?.forEach(audio => audio.getTracks().forEach(track => track.stop()));\n    }\n  };\n\n  useEffect(() => {\n    if (videoRef.current && !hasStopped.current) {\n      if (props.recordingConfig.video) {\n        videoRef.current.srcObject = props.recordingConfig.video;\n        videoRef.current.volume = 0;\n        videoRef.current.play();\n      }\n\n      const stream = new MediaStream([\n        props.recordingConfig.video!.getVideoTracks()[0],\n        MediaService.mergeTracks(props.recordingConfig.video!, props.recordingConfig.audio!)?.getAudioTracks()[0]!\n      ].filter(stream => !!stream));\n\n      recorder.current = new MediaRecorder(stream);\n      recorder.current.start(30000);\n\n      stream.getTracks().forEach(t => t.addEventListener(\"ended\", () => onStop()));\n\n      recorder.current.ondataavailable = e => blobs.current.push(e.data);\n      start.current = new Date();\n    }\n  }, [props.recordingConfig.video, videoRef.current]);\n\n  return (\n    <AppContainer title=\"Recording...\" className=\"recording\">\n      {\n        props.recordingConfig.video && (\n          <div className=\"video-preview\">\n            <video ref={videoRef} />\n          </div>\n        )\n      }\n\n      <div className=\"card\">\n        <h2 className=\"no-select\"><i className=\"material-icons\">camera_roll</i>Your recording is running</h2>\n        <p>Your specified devices are being recorded.</p>\n        <div className=\"actions\">\n          <Button icon=\"check\" onClick={onStop}>\n            Stop Recording\n          </Button>\n        </div>\n      </div>\n    </AppContainer>\n  )\n};\n","import * as React from \"react\";\nimport {AppContainer} from \"./AppContainer\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {Button} from \"./Button\";\n\nexport const Finished: React.FC<{\n  blobs: Blob[];\n  length: number;\n  onRestart?: () => any;\n}> = props => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [size, setSize] = useState(0);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      const finalBlob = new Blob(props.blobs, {\n        type: 'video/webm'\n      });\n      videoRef.current.src = window.URL.createObjectURL(finalBlob);\n      videoRef.current.play();\n      videoRef.current.loop = true;\n      videoRef.current.controls = true;\n      setSize(finalBlob.size);\n    }\n\n  }, []);\n\n  let fileSize = size / 1024;\n  let sizeUnit = 'KB';\n\n  if (fileSize > 1024) {\n    fileSize = fileSize / 1024;\n    sizeUnit = 'MB';\n  }\n  if (fileSize > 1024) {\n    fileSize = fileSize / 1024;\n    sizeUnit = 'GB';\n  }\n\n  fileSize = Math.round(fileSize * 100) / 100;\n\n  let seconds = Math.floor((props.length / 1000) % 60);\n  let minutes = Math.floor((props.length / 1000) / 60);\n\n\n  return (\n    <AppContainer title=\"Done!\">\n      {\n        (\n          <div className=\"video-preview\">\n            <video ref={videoRef} />\n          </div>\n        )\n      }\n\n      <p>\n        Your video file is <b>{ minutes } minutes and { seconds } seconds</b> long and takes\n        up <b>{ fileSize }{ sizeUnit }</b> in space.\n      </p>\n\n      <p>\n        The file is available as <b>.webm</b> video file, which can be opened by web browsers\n        and most video viewers such as VLC.\n      </p>\n\n      <div className=\"bottom-actions\">\n        <Button\n          icon=\"get_app\"\n          onClick={() => {\n            const url = URL.createObjectURL(new Blob(props.blobs, { type: 'video/webm' }));\n            const a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n            a.href = url;\n            a.download = 'recording.webm';\n            a.click();\n            window.URL.revokeObjectURL(url);\n          }}\n        >\n          Download\n        </Button>\n        <Button icon=\"fiber_manual_record\" onClick={props.onRestart}>\n          Record another one\n        </Button>\n      </div>\n    </AppContainer>\n  )\n};\n","import * as React from \"react\";\nimport {AppContainer} from \"./AppContainer\";\nimport {Page} from \"../Page\";\nimport {Button} from \"./Button\";\nimport {Dialog} from \"./Dialog\";\n\nexport const Welcome: React.FC<{\n  onChangePage: (page: Page) => any;\n}> = props => {\n  // @ts-ignore\n  const isOpera = (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n  // @ts-ignore\n  const isFirefox = typeof InstallTrigger !== 'undefined';\n  // @ts-ignore\n  const isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));\n  // @ts-ignore\n  const isIE = /*@cc_on!@*/false || !!document.documentMode;\n  // @ts-ignore\n  const isEdge = !isIE && !!window.StyleMedia;\n  // @ts-ignore\n  const isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);\n  const isEdgeChromium = isChrome && (navigator.userAgent.indexOf(\"Edg\") != -1);\n  const isBlink = (isChrome || isOpera) && !!window.CSS;\n\n\n  return (\n    <AppContainer title=\"Vileo\">\n      <p>\n        Vileo is a simple video recording tool for recording your screen, your webcam or audio devices.\n      </p>\n      <p>\n        It works from within your browser and can be started right away!\n      </p>\n\n      {\n        isFirefox && (\n          <div className=\"card\">\n            <h2 className=\"no-select\">\n              <img height=\"32\" width=\"32\" src=\"https://unpkg.com/simple-icons@v2/icons/mozillafirefox.svg\" style={{ filter: 'invert(1)' }} />\n              &nbsp;\n              You're running Firefox!\n            </h2>\n            <p>Recording desktop audio might not be possible here. Try Google Chrome if you need desktop audio.</p>\n          </div>\n        )\n      }\n\n      {\n        isEdge && (\n          <div className=\"card\">\n            <h2 className=\"no-select\">\n              <img height=\"32\" width=\"32\" src=\"https://unpkg.com/simple-icons@v2/icons/microsoftedge.svg\" style={{ filter: 'invert(1)' }} />\n              &nbsp;\n              You're running Microsoft Edge!\n            </h2>\n            <p>The Recorder might not work on your browser. Try Google Chrome instead.</p>\n          </div>\n        )\n      }\n\n      {\n        isIE && (\n          <div className=\"card\">\n            <h2 className=\"no-select\">\n              <img height=\"32\" width=\"32\" src=\"https://unpkg.com/simple-icons@v2/icons/internetexplorer.svg\" style={{ filter: 'invert(1)' }} />\n              &nbsp;\n              You're running Internet Explorer!\n            </h2>\n            <p>The Recorder might not work on your browser. Try Google Chrome instead.</p>\n          </div>\n        )\n      }\n\n      <div className=\"bottom-actions\">\n        <Button icon=\"arrow_forward\" onClick={() => props.onChangePage(Page.Configure)}>\n          Let's go!\n        </Button>\n      </div>\n    </AppContainer>\n  )\n};\n","import * as React from \"react\";\nimport {useState} from \"react\";\nimport {Page} from \"../Page\";\nimport {RecordingSettings} from \"./RecordingSettings\";\nimport {RecordingConfiguration} from \"../RecordingConfiguration\";\nimport {RecordingProcess} from \"./RecordingProcess\";\nimport {Finished} from \"./Finished\";\nimport {Welcome} from \"./Welcome\";\n\nexport const Main: React.FC<{}> = props => {\n  const [step, setStep] = useState(Page.Welcome);\n  const [cfg, setCfg] = useState<RecordingConfiguration>();\n  const [recording, setRecording] = useState<[Blob[], number]>();\n\n  switch (step) {\n    case Page.Welcome:\n      return (\n        <Welcome onChangePage={setStep} />\n      )\n    case Page.Configure:\n      return (\n        <RecordingSettings\n          startRecording={(cfg) => {\n            setCfg(cfg);\n            setStep(Page.RecordingProcess);\n          }}\n          onBack={() => setStep(Page.Welcome)}\n        />\n      )\n    case Page.RecordingProcess:\n      return (\n        <RecordingProcess\n          recordingConfig={cfg!}\n          onStop={(data, length) => {\n            setRecording([data, length]);\n            setStep(Page.Finished);\n          }}\n        />\n      );\n    case Page.Finished:\n      return (\n        <Finished\n          blobs={recording![0]}\n          length={recording![1]}\n          onRestart={() => setStep(Page.Configure)}\n        />\n      )\n    default:\n      return (\n        <div>\n          Content\n        </div>\n      )\n  }\n\n};\n","import * as React from \"react\";\nimport pkg from '../../package.json';\n\nexport const FootNote: React.FC<{}> = props => {\n  return (\n    <footer>\n      Vileo {pkg.version} -{' '}\n      Made by Lukas Bach.{' '}\n      {/* eslint-disable-next-line react/jsx-no-target-blank */}\n      <a href=\"https://lukasbach.com\" target=\"_blank\">lukasbach.com</a>{' '}\n      <a href=\"https://github.com/lukasbach/vileo\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub Repo</a>\n    </footer>\n  )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\nimport {Main} from \"./components/Main\";\nimport {FootNote} from \"./components/FootNote\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-container\">\n      <Main />\n      <FootNote />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}